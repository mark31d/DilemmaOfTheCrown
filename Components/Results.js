import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  ScrollView,
} from 'react-native';

// –ü—Ä–æ—Å—Ç—ã–µ –∏–∫–æ–Ω–∫–∏/—ç–º–æ–¥–∂–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
const categoryEmojis = {
  war: '‚öîÔ∏è',
  love: 'üíî',
  power: 'üëë',
  faith: 'ü™∂',
  treason: 'üêç',
};

// –§—É–Ω–∫—Ü–∏—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ –∏–≥—Ä–æ–∫–∞–º
function groupAnswersByPlayer(answers) {
  // –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –≤–∏–¥–∞ { "Player 1": [...], "Player 2": [...] }
  const grouped = {};
  answers.forEach((ans) => {
    if (!grouped[ans.player]) {
      grouped[ans.player] = [];
    }
    grouped[ans.player].push(ans);
  });
  // –ü—Ä–µ–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç –≤ –º–∞—Å—Å–∏–≤ –≤–∏–¥–∞ [{ player, answers }, ...]
  return Object.entries(grouped).map(([player, ans]) => ({
    player,
    answers: ans,
  }));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º
const computeAverage = (answers) => {
  const total = answers.reduce((acc, item) => acc + (item.chosenPercent || 0), 0);
  return answers.length ? (total / answers.length).toFixed(0) : 0;
};

const Results = ({ route, navigation }) => {
  // –ò–∑ GameQuiz –ø–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ answers –∏ (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏) —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
  const { answers = [] } = route.params || {};

  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç—ã –ø–æ –∏–≥—Ä–æ–∫–∞–º
  const playersAnswers = groupAnswersByPlayer(answers);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ MENU –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
  const handleMenuPress = () => {
    navigation.navigate('Main');
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>THE VERDICTS ARE IN!</Text>
      <ScrollView style={{ width: '100%' }} contentContainerStyle={{ paddingBottom: 40 }}>
        {playersAnswers.map((pa) => {
          // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–∏–π —Å—Ä–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –∏–≥—Ä–æ–∫–∞
          const overallAverage = computeAverage(pa.answers);

          // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç—ã –∏–≥—Ä–æ–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º ‚Äî –ø–æ –∫–∞–∂–¥–æ–π —Ç–µ–º–µ –±—É–¥–µ—Ç –æ–¥–∏–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
          const categoryGroups = {};
          pa.answers.forEach((ans) => {
            const catKey = ans.category.toLowerCase();
            if (!categoryGroups[catKey]) {
              categoryGroups[catKey] = {
                category: ans.category,
                answers: [],
              };
            }
            categoryGroups[catKey].answers.push(ans);
          });
          const categoriesArr = Object.values(categoryGroups);

          return (
            <View key={pa.player} style={styles.playerBlock}>
              {/* –ò–º—è –∏–≥—Ä–æ–∫–∞ */}
              <Text style={styles.playerTitle}>{pa.player}</Text>

              {/* –û—Ç–¥–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ–±—â–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ */}
              <View style={styles.overallContainer}>
                <Text style={styles.overallText}>Overall Average: {overallAverage}%</Text>
              </View>

              {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–µ–º—ã */}
              {categoriesArr.map((catItem, idx) => {
                const avgCategory = computeAverage(catItem.answers);
                const emoji = categoryEmojis[catItem.category.toLowerCase()] || '‚ùì';
                return (
                  <View key={idx} style={styles.categoryRow}>
                    <View style={styles.categoryInfo}>
                      {/* –û–±—ë—Ä—Ç–∫–∞ –¥–ª—è —ç–º–æ–¥–∑–∏ */}
                      <View style={styles.emojiContainer}>
                        <Text style={styles.emojiText}>{emoji}</Text>
                      </View>
                      <Text style={styles.categoryText}>{catItem.category.toUpperCase()}</Text>
                    </View>
                    <Text style={styles.percentText}>{avgCategory}%</Text>
                  </View>
                );
              })}
            </View>
          );
        })}

        {/* –ö–Ω–æ–ø–∫–∞ MENU –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω */}
        <TouchableOpacity style={styles.menuButton} onPress={handleMenuPress}>
          <Text style={styles.menuButtonText}>MENU</Text>
        </TouchableOpacity>
      </ScrollView>
    </View>
  );
};

export default Results;

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#211F27',
    paddingTop: 60,
    paddingHorizontal: 16,
    alignItems: 'center',
  },
  title: {
    color: '#F7F0CE',
    fontSize: 20,
    fontWeight: '700',
    textAlign: 'center',
  },
  // –ë–ª–æ–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞
  playerBlock: {
    backgroundColor: '#2D2C30',
    borderRadius: 12,
    padding: 16,
    marginTop: 16,
    width: '100%',
  },
  playerTitle: {
    color: '#F7F0CE',
    fontSize: 16,
    fontWeight: '600',
    marginBottom: 4,
  },
  // –û—Ç–¥–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ–±—â–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
  overallContainer: {
    backgroundColor: '#F7F0CE',
    borderRadius: 8,
    paddingVertical: 12,
    paddingHorizontal: 16,
    marginBottom: 12,
    alignItems: 'center',
  },
  overallText: {
    color: '#000',
    fontSize: 16,
    fontWeight: '700',
  },
  // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ–¥–Ω–æ–π —Ç–µ–º—ã (–∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
  categoryRow: {
    backgroundColor: '#F7F0CE',
    borderRadius: 8,
    paddingVertical: 12,
    paddingHorizontal: 16,
    marginBottom: 8,
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  // –ì—Ä—É–ø–ø–∞ —ç–º–æ–¥–∑–∏ –∏ —Ç–µ–∫—Å—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  categoryInfo: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  // –°—Ç–∏–ª—å –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —ç–º–æ–¥–∑–∏: –±–µ–ª—ã–π —Ñ–æ–Ω —Å borderRadius 15
  emojiContainer: {
    backgroundColor: '#fff',
    borderRadius: 10,
    padding: 5,
    marginRight: 8,
  },
  emojiText: {
    fontSize: 18,
  },
  categoryText: {
    color: '#000',
    fontSize: 15,
    fontWeight: '600',
  },
  percentText: {
    color: '#000',
    fontSize: 16,
    fontWeight: '700',
  },
  // –ö–Ω–æ–ø–∫–∞ MENU
  menuButton: {
    backgroundColor: '#F7F0CE',
    borderRadius: 8,
    paddingVertical: 16,
    paddingHorizontal: 60,
    alignItems: 'center',
    marginTop: 30,
    alignSelf: 'center',
  },
  menuButtonText: {
    color: '#000',
    fontSize: 16,
    fontWeight: '700',
  },
});
